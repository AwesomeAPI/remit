Remit
=====

This API provides access to the Amazon Flexible Payment Service (FPS). After
trying to get the SOAP version of the API written, I began working on this REST
version to provide a cohesive means of access to all of the functionality of
the FPS without having to get dirty dealing with SOAP requests.

I hope you enjoy using it as much as I've enjoyed writing it. I'm interested to
hear what sort of uses you find for it. If you find any bugs, let me know (or
better yet, submit a patch).

Setup
------
Requires a config file located at #{RAILS_ROOT}/config/amazon_fps.yml.  Use the following format.

  development:
    access_key: <your sandbox access key>
    secret_access_key: <your sandbox secret access key>
    return_base: <your development return url>
    endpoint: 'https://fps.sandbox.amazonaws.com/'
    pipeline: 'https://authorize.payments-sandbox.amazon.com/cobranded-ui/actions/start'
    sandbox: true
    version: '2007-01-08'

  test:
    access_key: <your sandbox access key>
    secret_access_key: <your sandbox secret access key>
    return_base: <your development return url>
    endpoint: 'https://fps.sandbox.amazonaws.com/'
    pipeline: 'https://authorize.payments-sandbox.amazon.com/cobranded-ui/actions/start'
    sandbox: true
    version: '2007-01-08'
  
  production:
    access_key: <your real access key>
    secret_access_key: <your real secret access key>
    return_base: <your production return url>
    version: '2007-01-08'
    endpoint: 'https://fps.amazonaws.com/'
    pipeline: 'https://authorize.payments.amazon.com/cobranded-ui/actions/start'
    sandbox: false



Users
-----

The following sites are using Remit:

  * http://www.storenvy.com/
  * http://www.obsidianportal.com/


Sandbox
-------
Amazon provides a testing environment for the FPS called a sandbox. You may
(and should) use the sandbox while testing your application. It can be enabled
by passing a value of true to the last argument of the API constructor.


Example
-------
The following example shows how to load up the API, initialize the service, and
make a simple call to get the tokens stored on the account:

  require 'remit'

  ACCESS_KEY = '<your AWS access key>'
  SECRET_KEY = '<your AWS secret key>'

  # connect using the API's sandbox mode
  remit = Remit::API.new(ACCESS_KEY, SECRET_KEY, true)

  response = remit.get_tokens
  puts response.tokens.first.token_id


Copyright (c) 2007-2008 Tyler Hunt, released under the MIT license
